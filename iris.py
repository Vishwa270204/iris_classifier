# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1pNQmxu7lCcCdO7573OCaKkuTEh3emBe6
"""

# Step 1: Import Libraries
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import streamlit as st
from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix

# Step 2: Load Iris Dataset
iris = load_iris()
df = pd.DataFrame(data=iris.data, columns=iris.feature_names)
df['target'] = iris.target
df['species'] = df['target'].apply(lambda x: iris.target_names[x])

# Step 3: Display Dataset
print("First 5 rows of dataset:")
st.write(df.head())

# Step 4: Visualize the Data
sns.pairplot(df, hue="species")
plt.suptitle("Iris Feature Visualization", y=1.02)
plt.show()

# Step 5: Prepare Data
X = df[iris.feature_names]
y = df['target']

#  Step 6: Split Data (80% Train, 20% Test)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Step 7: Train the Model using K-Nearest Neighbors
model = KNeighborsClassifier(n_neighbors=3)
model.fit(X_train, y_train)

#  Step 8: Predict on Test Set
y_pred = model.predict(X_test)

# Step 9: Evaluate the Model
print("\n Model Evaluation:")
print(" Accuracy:", accuracy_score(y_test, y_pred))
print("\n Classification Report:\n", classification_report(y_test, y_pred))
print(" Confusion Matrix:\n", confusion_matrix(y_test, y_pred))

